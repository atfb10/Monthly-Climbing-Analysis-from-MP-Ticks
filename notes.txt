'''
TODO: REMAINING STEPS
1. data
    a. NOTE (1): filter out to only previous 30 days
    b. NOTE (2): txt file with data aggregated
 2. Logging to txt file

 TODO: FUTURE STEPS
 1. Use machine learning to predict what grades of routes, types of climbs, number of pitches, etc; that the user is going to do in the next month. Send this the day before their results come out
'''

'''
Graph Ideas
- likelihood (percentage) of onsighting/flashing a route of a specific grade
- Word cloud taken from notes
'''

'''
Text Data Ideas (.csv -> .html) Iteration 1 = data in a text file. Iteration 2 = table in html file. Iteration 3 -> in a bootstrap styled html file.
NOTE: Utilize groupby method extensively!
- Total Pitches climbed
- Route climbed the most
- Boulder climbed the most
- Hardest boulder sent
- Highest rated MP climb of the month 
- Lowest rated MP climb of the month
- List of routes given four stars (your favorites of the month)
- List of routes given 1 star or a bomb (your least favorite climbs of the month)
- Longest route (by vertical feet)
- Biggest day of climbing (by vertical feet)
- Challenging: correlation table of route grades send by length, number of pitches, etc
'''

'''
how I want to do HTML file.
1. Create dataframe with all the text data: do this by 
    a) extracting the values from the dataframe. 
    b) creating a dictionary object with each key as what the category and each value as the value for that category (example 'num_feet_climbed': length_variable) 
    c. Pass that dictionary into a dataframe object
2. Write the dataframe as a .html (iteration 2 = done)
3. Write the table to a pre-styled html file, and then save that html file for each user
'''

'''
Future TODO:
    - Move all data cleansing and file moving functions into the User class
    - HTML Statistics table styling
    - Update plotly html files to be Dash dashboards
'''